{
  "icon_theme": "Catppuccin Latte",
  "features": {
    "edit_prediction_provider": "zed"
  },
  "assistant": {
    "default_model": {
      "provider": "zed.dev",
      "model": "claude-3-7-sonnet-latest"
    },
    "dock": "left",
    "version": "2"
  },
  "base_keymap": "VSCode",
  "ui_font_size": 16,
  "buffer_font_size": 16,
  "theme": {
    "mode": "system",
    "light": "One Light",
    "dark": "Vercel Dark"
  },
  "vim_mode": true,
  "ui_font_family": "IBM Plex Mono",
  "buffer_font_family": "IBM Plex Mono",
  "anti_aliasing": "subpixel",
  "indent_guides": {
      "enabled": false
  },
  "relative_line_numbers": true,
  "cursor_blink": false,
  "experimental.theme_overrides": {
      // "background": "#1a1b26CC",
      // "editor.background": "#00000010",
      // "editor.gutter.background": "#00000010"
    },
  "buffer_line_height": {
    "custom": 2
  },
  "inlay_hints": {
    "enabled": true,
    "show_parameter_hints": true,
    "show_type_hints": false
  },
  "vertical_scroll_margin": 0,
  "tab_bar": {
    "show": true
  },
  "lsp": {
    "tailwindcss-language-server": {
      "settings": {
        "classAttributes": [
          "class",
          "className",
          "ngClass",
          "styles"
        ]
      }
    }
  },
  "tab_size": 2,
  "outline_panel": {
    "button": false
  },
  "languages": {
    // Refer https://zed.dev/docs/languages/javascript and https://zed.dev/docs/languages/typescript for more info
    "TypeScript": {
      // Refer https://github.com/jellydn/ts-inlay-hints for how to setup for Neovim and VSCode
      "inlay_hints": {
        "enabled": true,
        "show_parameter_hints": false,
        "show_other_hints": true,
        "show_type_hints": true
      },
      "tab_size": 2,
      "formatter": {
        "external": {
          "command": "prettier",
          "arguments": [
            "--stdin-filepath",
            "{buffer_path}"
          ]
        }
      }
    }
  },
  "telemetry": {
    "diagnostics": false,
    "metrics": false
  },
  "hard_tabs": false,
  "formatter": "language_server",
  "format_on_save": "off",
  "project_panel": {
    "indent_size": 20,
    "auto_fold_dirs": true,
    "button": true,
    "dock": "right",
    "git_status": true,
    "indent_guides": {
      "enabled": false,
      "coloring": "indent_aware"
    }
  },
  "centered_layout": {
    "left_padding": 0.15,
    "right_padding": 0.15
  },
  "soft_wrap": "editor_width",
  "edit_predictions": {
    "disabled_globs": [
      ".env",
      "test.go",
      ".md",
      "diagram.dsl"
    ]
  },
  "scrollbar": {
    "git_diff": false,
    "search_results": false,
    "selected_symbol": false,
    "diagnostics": "all"
  },
  "preview_tabs": {
    "enabled": false,
    "enable_preview_from__file_finder": false,
    "enable_preview_from_code_navigation": false
  },
  "toolbar": {
    // Whether to show breadcrumbs.
    "breadcrumbs": false,
    // Whether to show quick action buttons.
    "quick_actions": false,
    // Whether to show the Selections menu in the editor toolbar
    "selections_menu": false
  },
  "chat_panel": {
    // Whether to show the chat panel button in the status bar.
    "button": "always"
  },
  "notification_panel": {
    // Whether to show the notification panel button in the status bar.
    "button": false
  },
  "task": {
    // Whether to show task status indicator in the status bar. Default: true
    "show_status_indicator": false
  },
  "terminal": {
    "shell": {
      "program": "zsh"
    },
    "dock": "bottom",
    // Default width when the terminal is docked to the left or right.
    "default_width": 640,
    // Default height when the terminal is docked to the bottom.
    "default_height": 320,
    "working_directory": "current_project_directory",
    "blinking": "terminal_controlled",
    "cursor_shape": "bar",
    // Set whether the option key behaves as the meta key.
    // May take 2 values:
    //  1. Rely on default platform handling of option key, on macOS
    //     this means generating certain unicode characters
    //         "option_as_meta": false,
    //  2. Make the option keys behave as a 'meta' key, e.g. for emacs
    //         "option_as_meta": true,
    "option_as_meta": false,
    // Whether or not selecting text in the terminal will automatically
    // copy to the system clipboard.
    "copy_on_select": true,
    // Whether to show the terminal button in the status bar
    "button": true,
    "line_height": "comfortable",
    "toolbar": {
      // Whether to display the terminal title in its toolbar.
      "title": false,
      "breadcrumbs": false
    },
    "font_family": "Input Mono"
  }
}
